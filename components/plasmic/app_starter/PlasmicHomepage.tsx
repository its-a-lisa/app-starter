// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 9WWMjYs2gyQXMvMAkxbjFX
// Component: kTEhf34ROZuT

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: Sf-roQghQ14-/component
import Button from "../../Button"; // plasmic-import: WvItauIVw1SL/component
import SignUpPrompt from "../../SignUpPrompt"; // plasmic-import: 7Zl2VIax1zjD/component
import Section from "../../Section"; // plasmic-import: 55QmBHuhr80U/component
import ValueProp from "../../ValueProp"; // plasmic-import: bMNgttUj5XYc/component
import ListItem from "../../ListItem"; // plasmic-import: QSdl5UDCOa5d/component
import PriceCard from "../../PriceCard"; // plasmic-import: 95v4tkFiklHM/component
import Banner from "../../Banner"; // plasmic-import: OHsuQI_yIE0t/component
import Testimonial from "../../Testimonial"; // plasmic-import: 1mbEOw7hLjR9/component
import CallToActionSection from "../../CallToActionSection"; // plasmic-import: ddWfKBG97TTx/component
import FooterSection from "../../FooterSection"; // plasmic-import: WaNzcmtox2aw/component

import { useScreenVariants as useScreenVariantseEon1ZnLO7Y } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: eEON1ZN-lO7Y/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_app_starter.module.css"; // plasmic-import: 9WWMjYs2gyQXMvMAkxbjFX/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: kTEhf34ROZuT/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: BoW0iYMM00Da/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: aKRxJ8RBqt4L/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: aAFB24W5NNY7/icon
import CheckCircleIcon from "./icons/PlasmicIcon__CheckCircle"; // plasmic-import: 78DAvKBt6Abk/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  headerHeroSection?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  signUpPrompt?: p.Flex<typeof SignUpPrompt>;
  valuePropsSection?: p.Flex<typeof Section>;
  checkpointsSection?: p.Flex<typeof Section>;
  pricingSection?: p.Flex<typeof Section>;
  shopBannersSection?: p.Flex<typeof Section>;
  logoCloudSection?: p.Flex<typeof Section>;
  testimonialsSection?: p.Flex<typeof Section>;
  callToActionSection?: p.Flex<typeof CallToActionSection>;
  footerSection?: p.Flex<typeof FooterSection>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantseEon1ZnLO7Y()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"headerHeroSection"}
            data-plasmic-override={overrides.headerHeroSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.headerHeroSection)}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__tyy2Z)}
            >
              <div className={classNames(projectcss.all, sty.column__ntLfX)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rcfxT)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ggti5)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bi26V)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mWDe
                        )}
                      >
                        {"Updated!"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zsVzw
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Designs that "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ textDecoration: "underline" }}
                        >
                          {"adapt"}
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rfjzI
                      )}
                    >
                      {
                        "Orci dui condimentum rutrum laoreet hac purus porta sem sem a vivamus a posuere vel molestie."
                      }
                    </div>
                  </p.Stack>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__m2WZ)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__eYy3D
                      )}
                      color={"darkGray"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__q1GdC)}
                          role={"img"}
                        />
                      }
                      showEndIcon={true}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nuUs
                        )}
                      >
                        {"Start now"}
                      </div>
                    </Button>
                    <Button
                      bgDifference={true}
                      className={classNames(
                        "__wab_instance",
                        sty.button___4YCwb
                      )}
                      color={"darkGray"}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jx5Zy
                        )}
                      >
                        {"Learn more\u2026"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__z22MR)}>
                <SignUpPrompt
                  data-plasmic-name={"signUpPrompt"}
                  data-plasmic-override={overrides.signUpPrompt}
                  className={classNames("__wab_instance", sty.signUpPrompt)}
                />
              </div>
            </p.Stack>
          </p.Stack>
          <Section
            data-plasmic-name={"valuePropsSection"}
            data-plasmic-override={overrides.valuePropsSection}
            className={classNames("__wab_instance", sty.valuePropsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___1AAig)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ygT47)}>
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__k7Pj4
                  )}
                >
                  {"Proposing values"}
                </h2>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cLj9G
                )}
              >
                {
                  "Consectetur a adipiscing sagittis sed proin libero himenaeos ornare adipiscing suscipit leo vestibulum facilisi consequat nisi nisi adipiscing habitant facilisis suspendisse hac integer eget quam facilisis sem placerat fames."
                }
              </div>
            </p.Stack>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rcZ0H)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__piCtA)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__qtMn1)}
                  description={
                    "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__fpuh5)}
                      role={"img"}
                    />
                  }
                  title={"Powerful"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__nfZkh)}
                  description={
                    "Consequat scelerisque a eros taciti nisl a sodales."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__ho2Ij)}
                      role={"img"}
                    />
                  }
                  title={"Faster"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__lnkeD)}
                  description={"At ut condimentum amet adipiscing ac diam a."}
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__v9Qux)}
                      role={"img"}
                    />
                  }
                  title={"Best and brightest"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__iDyTd)}
                  description={
                    "Donec purus nec vestibulum volutpat vivamus vulputate suspendisse."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__wimzi)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dFro0
                      )}
                    >
                      {"Dynamic range"}
                    </div>
                  }
                />
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hUnXp)}
              >
                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__zysoT)}
                  description={
                    "Commodo pretium himenaeos nisi potenti ad in ante."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__cwx1A)}
                      role={"img"}
                    />
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6Nppu
                      )}
                    >
                      {"Portable"}
                    </div>
                  }
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__vPUmR)}
                  description={
                    "Magna ullamcorper ut arcu nisi a per facilisis."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__oxAjn)}
                      role={"img"}
                    />
                  }
                  title={"Production-ready"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__jIefx)}
                  description={
                    "Ac lobortis praesent sagittis dictumst fermentum vestibulum nunc."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__qzVnD)}
                      role={"img"}
                    />
                  }
                  title={"Magical"}
                />

                <ValueProp
                  className={classNames("__wab_instance", sty.valueProp__bQqiX)}
                  description={
                    "A parturient mi suspendisse nisl inceptos nullam a."
                  }
                  flatIcon={true}
                  icon={
                    <CheckIcon
                      className={classNames(projectcss.all, sty.svg__zDpup)}
                      role={"img"}
                    />
                  }
                  title={"Accessible"}
                />
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"checkpointsSection"}
            data-plasmic-override={overrides.checkpointsSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.checkpointsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__k2Vp2)}
              id={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "features"
                  : "features"
              }
            >
              <div className={classNames(projectcss.all, sty.column__uFj0D)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__deY7B)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yPzb
                    )}
                  >
                    {"Freedoms"}
                  </div>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__kemu5
                    )}
                  >
                    {"Open by design"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b2UZl
                    )}
                  >
                    {
                      "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                    }
                  </div>
                  <Button
                    className={classNames("__wab_instance", sty.button__qyAG)}
                    endIcon={
                      <ChevronRightIcon
                        className={classNames(projectcss.all, sty.svg__oSn6V)}
                        role={"img"}
                      />
                    }
                    flat={true}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tNYoA
                      )}
                    >
                      {"Learn more"}
                    </div>
                  </Button>
                </p.Stack>
              </div>
              <div className={classNames(projectcss.all, sty.column__wxxWm)}>
                <div className={classNames(projectcss.all, sty.freeBox__ta9F2)}>
                  <ListItem
                    bottomBorder={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "dark"
                        : "dark"
                    }
                    className={classNames("__wab_instance", sty.listItem__p80K)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__ovp4W)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6NLcL
                      )}
                    >
                      {"Built on capability"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__p5HvR
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__rhUsY)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m5AzX
                      )}
                    >
                      {"Highly energetic"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames("__wab_instance", sty.listItem__vRId)}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__naVQr)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__e1Wq1
                      )}
                    >
                      {"100% transparency and accountability"}
                    </div>
                  </ListItem>
                  <ListItem
                    bottomBorder={"dark"}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__fQtxi
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__m446M)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3NpuQ
                      )}
                    >
                      {"Refreshing clarity"}
                    </div>
                  </ListItem>
                  <ListItem
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__cOErO
                    )}
                    icon={
                      <CheckCircleIcon
                        className={classNames(projectcss.all, sty.svg__rxytP)}
                        role={"img"}
                      />
                    }
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qy8Wi
                      )}
                    >
                      {"Modern results"}
                    </div>
                  </ListItem>
                </div>
              </div>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"pricingSection"}
            data-plasmic-override={overrides.pricingSection}
            background={"dark"}
            className={classNames("__wab_instance", sty.pricingSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2P0Pq)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xnuO5)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__x0Blr)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zJd4
                    )}
                  >
                    {"Pricing plans"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xt24H
                  )}
                >
                  {
                    "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                  }
                </div>
              </p.Stack>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__rj4Ck)}
              >
                <div className={classNames(projectcss.all, sty.column___59M6)}>
                  <PriceCard
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatRight"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard___6PLAa
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__b5Dk2
                          )}
                          description={
                            "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fWfoK
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__iKkP2
                          )}
                          description={"Mus consequat a justo"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ljD51
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__mhn)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__udbtN
                        )}
                      >
                        {"Buy pro"}
                      </div>
                    }
                    borders={[]}
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__rT8Nb
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___0PMuO
                          )}
                          description={
                            "Ligula primis mollis sem dignissim semper lectus parturient"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__z9FQy
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__om9P9
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___73Bfr
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__jGaIi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__cDtSv
                          )}
                          description={
                            "Condimentum diam a et sapien praesent potenti torquent a eros"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bKYu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vU33R
                          )}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rMvx9
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lfnFo
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={"PRO"}
                    primary={true}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__sgDh)}>
                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nqMtr
                        )}
                      >
                        {"Buy team"}
                      </div>
                    }
                    borders={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? []
                        : ["flatLeft"]
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__sHGh6
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__jj9U6
                          )}
                          description={"Ad nam curae a potenti platea"}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bl8Ip
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__jSsqL
                          )}
                          description={
                            "A adipiscing scelerisque pretium consectetur sem"
                          }
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__uKuV1
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"10"}
                    label={"Team"}
                  />
                </div>
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"shopBannersSection"}
            data-plasmic-override={overrides.shopBannersSection}
            className={classNames("__wab_instance", sty.shopBannersSection)}
            size={"fullContentWidth"}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uMCe0)}
            >
              <Banner
                className={classNames("__wab_instance", sty.banner__bvseU)}
                image={{
                  src: "/plasmic/app_starter/images/sunglassesMale.jpg",
                  fullWidth: 2851,
                  fullHeight: 1900,
                  aspectRatio: undefined
                }}
                left={
                  <React.Fragment>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9DFw4
                      )}
                    >
                      {"Sunglasses Collection"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zbngh
                      )}
                    >
                      {"Get 25% off on selected items"}
                    </div>
                    <Button
                      color={"link"}
                      endIcon={
                        <ChevronRightIcon
                          className={classNames(projectcss.all, sty.svg__eLUa)}
                          role={"img"}
                        />
                      }
                      flat={true}
                      showEndIcon={true}
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__w034Y
                        )}
                      >
                        {"Go to collection"}
                      </div>
                    </Button>
                  </React.Fragment>
                }
              />

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eRs6D)}
              >
                <Banner
                  className={classNames("__wab_instance", sty.banner__xvxmu)}
                  image={{
                    src: "/plasmic/app_starter/images/sneakers.jpg",
                    fullWidth: 2850,
                    fullHeight: 1900,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oH4Ks
                        )}
                      >
                        {"Sneakers\nCollection"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nfY2
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>
                      <Button
                        color={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___85MtN
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bqjG
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />

                <Banner
                  className={classNames("__wab_instance", sty.banner__xn4FC)}
                  image={{
                    src: "/plasmic/app_starter/images/shirtWoman.png",
                    fullWidth: 1834,
                    fullHeight: 2751,
                    aspectRatio: undefined
                  }}
                  left={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bVbL3
                        )}
                      >
                        {"Shirts\nCollection"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tnwj5
                        )}
                      >
                        {"Get 25% off on selected items"}
                      </div>
                      <Button
                        color={"link"}
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__rTffb
                            )}
                            role={"img"}
                          />
                        }
                        flat={true}
                        showEndIcon={true}
                        submitsForm={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dmCq
                          )}
                        >
                          {"Go to collection"}
                        </div>
                      </Button>
                    </React.Fragment>
                  }
                />
              </p.Stack>
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"logoCloudSection"}
            data-plasmic-override={overrides.logoCloudSection}
            className={classNames("__wab_instance", sty.logoCloudSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__etEts)}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___8Bptm)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/app_starter/images/loom.svg",
                  fullWidth: 300,
                  fullHeight: 91,
                  aspectRatio: 3.303226
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__zX8H)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/app_starter/images/strapi.svg",
                  fullWidth: 300,
                  fullHeight: 78,
                  aspectRatio: 3.849624
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__omTDh)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/app_starter/images/segment.svg",
                  fullWidth: 300,
                  fullHeight: 62,
                  aspectRatio: 4.87619
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__n3Wy)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/app_starter/images/xstate.svg",
                  fullWidth: 300,
                  fullHeight: 94,
                  aspectRatio: 3.2
                }}
              />

              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img___7Ale9)}
                displayHeight={"48px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={{
                  src: "/plasmic/app_starter/images/mapbox.svg",
                  fullWidth: 300,
                  fullHeight: 67,
                  aspectRatio: 4.491228
                }}
              />
            </p.Stack>
          </Section>
          <Section
            data-plasmic-name={"testimonialsSection"}
            data-plasmic-override={overrides.testimonialsSection}
            background={"gray"}
            className={classNames("__wab_instance", sty.testimonialsSection)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__setMv)}
            >
              <div className={classNames(projectcss.all, sty.column__jMx6Q)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial___9XQfb
                  )}
                  image={{
                    src: "/plasmic/app_starter/images/tracy.png",
                    fullWidth: 500,
                    fullHeight: 500,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__mbLad)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__jrRgb
                  )}
                  image={{
                    src: "/plasmic/app_starter/images/elaine.png",
                    fullWidth: 460,
                    fullHeight: 280,
                    aspectRatio: undefined
                  }}
                  name={"Elaine Benes"}
                  quote={
                    <React.Fragment>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vXzmC
                        )}
                      >
                        {'"Vestibulum lacinia varius habitant dis aenean.'}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2HjV5
                        )}
                      >
                        {
                          'A parturient non ultricies a parturient leo a nascetur at consectetur turpis praesent mus ornare nulla posuere vel parturient."'
                        }
                      </div>
                    </React.Fragment>
                  }
                  title={"Editor, Pendant Publishing"}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__m7JPx)}>
                <Testimonial
                  className={classNames(
                    "__wab_instance",
                    sty.testimonial__yc1J
                  )}
                  image={{
                    src: "/plasmic/app_starter/images/louis.jpg",
                    fullWidth: 2249,
                    fullHeight: 3000,
                    aspectRatio: undefined
                  }}
                  name={"Louis Huang"}
                  quote={
                    '"Purus dis a primis rhoncus blandit velit suspendisse porta at ullamcorper suscipit a scelerisque sed pharetra facilisi vitae."'
                  }
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__y2Hxa
                      )}
                    >
                      {"Restaurant Owner, Cattleman's Ranch"}
                    </div>
                  }
                />
              </div>
            </p.Stack>
          </Section>
          <CallToActionSection
            data-plasmic-name={"callToActionSection"}
            data-plasmic-override={overrides.callToActionSection}
            className={classNames("__wab_instance", sty.callToActionSection)}
            image={{
              src: "/plasmic/app_starter/images/meeting.jpg",
              fullWidth: 2916,
              fullHeight: 1787,
              aspectRatio: undefined
            }}
          />

          <FooterSection
            data-plasmic-name={"footerSection"}
            data-plasmic-override={overrides.footerSection}
            className={classNames("__wab_instance", sty.footerSection)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerHeroSection",
    "navbar",
    "signUpPrompt",
    "valuePropsSection",
    "checkpointsSection",
    "pricingSection",
    "shopBannersSection",
    "logoCloudSection",
    "testimonialsSection",
    "callToActionSection",
    "footerSection"
  ],
  headerHeroSection: ["headerHeroSection", "navbar", "signUpPrompt"],
  navbar: ["navbar"],
  signUpPrompt: ["signUpPrompt"],
  valuePropsSection: ["valuePropsSection"],
  checkpointsSection: ["checkpointsSection"],
  pricingSection: ["pricingSection"],
  shopBannersSection: ["shopBannersSection"],
  logoCloudSection: ["logoCloudSection"],
  testimonialsSection: ["testimonialsSection"],
  callToActionSection: ["callToActionSection"],
  footerSection: ["footerSection"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerHeroSection: "div";
  navbar: typeof Navbar;
  signUpPrompt: typeof SignUpPrompt;
  valuePropsSection: typeof Section;
  checkpointsSection: typeof Section;
  pricingSection: typeof Section;
  shopBannersSection: typeof Section;
  logoCloudSection: typeof Section;
  testimonialsSection: typeof Section;
  callToActionSection: typeof CallToActionSection;
  footerSection: typeof FooterSection;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const PageGuard: React.FC<P> = props => (
    <p.PlasmicPageGuard
      minRole={null}
      appId={"9WWMjYs2gyQXMvMAkxbjFX"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={false}
    >
      <WrappedComponent {...props} />
    </p.PlasmicPageGuard>
  );

  return PageGuard;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  withPlasmicPageGuard(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    headerHeroSection: makeNodeComponent("headerHeroSection"),
    navbar: makeNodeComponent("navbar"),
    signUpPrompt: makeNodeComponent("signUpPrompt"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    checkpointsSection: makeNodeComponent("checkpointsSection"),
    pricingSection: makeNodeComponent("pricingSection"),
    shopBannersSection: makeNodeComponent("shopBannersSection"),
    logoCloudSection: makeNodeComponent("logoCloudSection"),
    testimonialsSection: makeNodeComponent("testimonialsSection"),
    callToActionSection: makeNodeComponent("callToActionSection"),
    footerSection: makeNodeComponent("footerSection"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Home",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
